// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ocimls.proto

package ocimls

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CellParams struct {
	Mcc                  string   `protobuf:"bytes,1,opt,name=Mcc,proto3" json:"Mcc,omitempty"`
	Mnc                  string   `protobuf:"bytes,2,opt,name=Mnc,proto3" json:"Mnc,omitempty"`
	Lac                  string   `protobuf:"bytes,3,opt,name=Lac,proto3" json:"Lac,omitempty"`
	Cell                 string   `protobuf:"bytes,4,opt,name=Cell,proto3" json:"Cell,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellParams) Reset()         { *m = CellParams{} }
func (m *CellParams) String() string { return proto.CompactTextString(m) }
func (*CellParams) ProtoMessage()    {}
func (*CellParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_abafbb0150367190, []int{0}
}

func (m *CellParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellParams.Unmarshal(m, b)
}
func (m *CellParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellParams.Marshal(b, m, deterministic)
}
func (m *CellParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellParams.Merge(m, src)
}
func (m *CellParams) XXX_Size() int {
	return xxx_messageInfo_CellParams.Size(m)
}
func (m *CellParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CellParams.DiscardUnknown(m)
}

var xxx_messageInfo_CellParams proto.InternalMessageInfo

func (m *CellParams) GetMcc() string {
	if m != nil {
		return m.Mcc
	}
	return ""
}

func (m *CellParams) GetMnc() string {
	if m != nil {
		return m.Mnc
	}
	return ""
}

func (m *CellParams) GetLac() string {
	if m != nil {
		return m.Lac
	}
	return ""
}

func (m *CellParams) GetCell() string {
	if m != nil {
		return m.Cell
	}
	return ""
}

type CellCoordsRadius struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=Lon,proto3" json:"Lon,omitempty"`
	Radius               uint32   `protobuf:"varint,3,opt,name=Radius,proto3" json:"Radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellCoordsRadius) Reset()         { *m = CellCoordsRadius{} }
func (m *CellCoordsRadius) String() string { return proto.CompactTextString(m) }
func (*CellCoordsRadius) ProtoMessage()    {}
func (*CellCoordsRadius) Descriptor() ([]byte, []int) {
	return fileDescriptor_abafbb0150367190, []int{1}
}

func (m *CellCoordsRadius) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellCoordsRadius.Unmarshal(m, b)
}
func (m *CellCoordsRadius) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellCoordsRadius.Marshal(b, m, deterministic)
}
func (m *CellCoordsRadius) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellCoordsRadius.Merge(m, src)
}
func (m *CellCoordsRadius) XXX_Size() int {
	return xxx_messageInfo_CellCoordsRadius.Size(m)
}
func (m *CellCoordsRadius) XXX_DiscardUnknown() {
	xxx_messageInfo_CellCoordsRadius.DiscardUnknown(m)
}

var xxx_messageInfo_CellCoordsRadius proto.InternalMessageInfo

func (m *CellCoordsRadius) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *CellCoordsRadius) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *CellCoordsRadius) GetRadius() uint32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type CellGeoPlusRange struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=Lat,proto3" json:"Lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=Lon,proto3" json:"Lon,omitempty"`
	Radius               uint32   `protobuf:"varint,3,opt,name=Radius,proto3" json:"Radius,omitempty"`
	Range                string   `protobuf:"bytes,4,opt,name=Range,proto3" json:"Range,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CellGeoPlusRange) Reset()         { *m = CellGeoPlusRange{} }
func (m *CellGeoPlusRange) String() string { return proto.CompactTextString(m) }
func (*CellGeoPlusRange) ProtoMessage()    {}
func (*CellGeoPlusRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_abafbb0150367190, []int{2}
}

func (m *CellGeoPlusRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellGeoPlusRange.Unmarshal(m, b)
}
func (m *CellGeoPlusRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellGeoPlusRange.Marshal(b, m, deterministic)
}
func (m *CellGeoPlusRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellGeoPlusRange.Merge(m, src)
}
func (m *CellGeoPlusRange) XXX_Size() int {
	return xxx_messageInfo_CellGeoPlusRange.Size(m)
}
func (m *CellGeoPlusRange) XXX_DiscardUnknown() {
	xxx_messageInfo_CellGeoPlusRange.DiscardUnknown(m)
}

var xxx_messageInfo_CellGeoPlusRange proto.InternalMessageInfo

func (m *CellGeoPlusRange) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *CellGeoPlusRange) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

func (m *CellGeoPlusRange) GetRadius() uint32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *CellGeoPlusRange) GetRange() string {
	if m != nil {
		return m.Range
	}
	return ""
}

func init() {
	proto.RegisterType((*CellParams)(nil), "ocimls.CellParams")
	proto.RegisterType((*CellCoordsRadius)(nil), "ocimls.CellCoordsRadius")
	proto.RegisterType((*CellGeoPlusRange)(nil), "ocimls.CellGeoPlusRange")
}

func init() {
	proto.RegisterFile("ocimls.proto", fileDescriptor_abafbb0150367190)
}

var fileDescriptor_abafbb0150367190 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xc1, 0x4a, 0x04, 0x31,
	0x0c, 0x40, 0x77, 0xdc, 0x75, 0xc0, 0xa0, 0xb0, 0x04, 0x91, 0xe2, 0x49, 0x7a, 0xf2, 0xb4, 0x07,
	0xfd, 0x02, 0x59, 0x61, 0x2e, 0xab, 0x2c, 0x73, 0xf0, 0x5e, 0x3b, 0x41, 0x06, 0xba, 0x8d, 0xb4,
	0x9d, 0x3f, 0xf1, 0x83, 0xa5, 0x69, 0xd1, 0xde, 0x3c, 0x78, 0x6a, 0xf2, 0x68, 0x5e, 0x93, 0x14,
	0x2e, 0xd9, 0xce, 0x27, 0x17, 0x77, 0x9f, 0x81, 0x13, 0x63, 0x5f, 0x32, 0xfd, 0x06, 0xb0, 0x27,
	0xe7, 0x8e, 0x26, 0x98, 0x53, 0xc4, 0x2d, 0xac, 0x5f, 0xac, 0x55, 0xdd, 0x5d, 0x77, 0x7f, 0x31,
	0xe6, 0x50, 0x88, 0xb7, 0xea, 0xac, 0x12, 0x2f, 0xe4, 0x60, 0xac, 0x5a, 0x17, 0x72, 0x30, 0x16,
	0x11, 0x36, 0xd9, 0xa1, 0x36, 0x82, 0x24, 0xd6, 0xaf, 0xb0, 0xcd, 0xe7, 0x9e, 0x39, 0x4c, 0x71,
	0x34, 0xd3, 0xbc, 0xc4, 0x52, 0x99, 0xc4, 0xde, 0xe5, 0xca, 0x24, 0x84, 0xbd, 0xd8, 0x33, 0x61,
	0x8f, 0x37, 0xd0, 0x97, 0xdb, 0xf2, 0xc0, 0xd5, 0x58, 0x33, 0x3d, 0x15, 0xdf, 0x40, 0x7c, 0x74,
	0x4b, 0x1c, 0x8d, 0xff, 0xa0, 0xff, 0xf8, 0xf0, 0x1a, 0xce, 0x45, 0x52, 0x9b, 0x2e, 0xc9, 0xc3,
	0x57, 0x07, 0xfd, 0x40, 0x29, 0x51, 0xc0, 0x67, 0xc0, 0x81, 0xd2, 0xcf, 0x0c, 0xb3, 0x37, 0x89,
	0x22, 0xe2, 0xae, 0x6e, 0xf1, 0x77, 0x69, 0xb7, 0xaa, 0x65, 0xed, 0xc0, 0x7a, 0xd5, 0x58, 0x06,
	0xe2, 0x27, 0x3f, 0x95, 0xc6, 0xff, 0xb4, 0xb4, 0x63, 0xea, 0xd5, 0x7b, 0x2f, 0x7f, 0xf6, 0xf8,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0xde, 0xdb, 0xb9, 0xf8, 0xc3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GetterClient is the client API for Getter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetterClient interface {
	GetCellCoordinates(ctx context.Context, in *CellParams, opts ...grpc.CallOption) (*CellCoordsRadius, error)
	GetCellGeoAndRange(ctx context.Context, in *CellParams, opts ...grpc.CallOption) (*CellGeoPlusRange, error)
}

type getterClient struct {
	cc grpc.ClientConnInterface
}

func NewGetterClient(cc grpc.ClientConnInterface) GetterClient {
	return &getterClient{cc}
}

func (c *getterClient) GetCellCoordinates(ctx context.Context, in *CellParams, opts ...grpc.CallOption) (*CellCoordsRadius, error) {
	out := new(CellCoordsRadius)
	err := c.cc.Invoke(ctx, "/ocimls.Getter/GetCellCoordinates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getterClient) GetCellGeoAndRange(ctx context.Context, in *CellParams, opts ...grpc.CallOption) (*CellGeoPlusRange, error) {
	out := new(CellGeoPlusRange)
	err := c.cc.Invoke(ctx, "/ocimls.Getter/GetCellGeoAndRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetterServer is the server API for Getter service.
type GetterServer interface {
	GetCellCoordinates(context.Context, *CellParams) (*CellCoordsRadius, error)
	GetCellGeoAndRange(context.Context, *CellParams) (*CellGeoPlusRange, error)
}

// UnimplementedGetterServer can be embedded to have forward compatible implementations.
type UnimplementedGetterServer struct {
}

func (*UnimplementedGetterServer) GetCellCoordinates(ctx context.Context, req *CellParams) (*CellCoordsRadius, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCellCoordinates not implemented")
}
func (*UnimplementedGetterServer) GetCellGeoAndRange(ctx context.Context, req *CellParams) (*CellGeoPlusRange, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCellGeoAndRange not implemented")
}

func RegisterGetterServer(s *grpc.Server, srv GetterServer) {
	s.RegisterService(&_Getter_serviceDesc, srv)
}

func _Getter_GetCellCoordinates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CellParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetterServer).GetCellCoordinates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocimls.Getter/GetCellCoordinates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetterServer).GetCellCoordinates(ctx, req.(*CellParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Getter_GetCellGeoAndRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CellParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetterServer).GetCellGeoAndRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocimls.Getter/GetCellGeoAndRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetterServer).GetCellGeoAndRange(ctx, req.(*CellParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Getter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ocimls.Getter",
	HandlerType: (*GetterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCellCoordinates",
			Handler:    _Getter_GetCellCoordinates_Handler,
		},
		{
			MethodName: "GetCellGeoAndRange",
			Handler:    _Getter_GetCellGeoAndRange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ocimls.proto",
}
